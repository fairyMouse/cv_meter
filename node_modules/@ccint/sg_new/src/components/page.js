import $ from 'jquery'
import sg from '../sg.js'
import './page.css'

sg.Component.define('Page', {
  properties: {
    onChange: null, // 选中页码的回调参数为当前页码
    total: 10, // 总页面
    current: 1, // 默认是第一页
    showNum: 5, // 最多展示页面跳转按钮个数（除了上一页，下一页，首页，尾页之外）,
    preText: '<', // 上一页的文本
    nextText: '>', // 下一页文本
    ellipsisText: '...' // 省略号文本
  },
  template: '<div class="sg_page"></div>',
  setValue: function (value) {
    let self = this
    let $dom = self.$dom
    let items = []
    let lastValue = 0
    let beforeIndex = value - Math.floor((self.showNum - 1) / 2)
    let afterIndex = value + Math.ceil((self.showNum - 1) / 2)
    if (beforeIndex < 2) {
      beforeIndex = 2
      afterIndex = Math.min(beforeIndex + self.showNum - 1, self.total - 1)
    } else if (afterIndex > self.total - 1) {
      afterIndex = self.total - 1
      beforeIndex = Math.max(afterIndex - self.showNum + 1, 2)
    }
    if (value < 0 || value > self.total) {
      return
    }
    if (self.preText) {
      if (value === 1) {
        items.push({
          label: self.preText,
          disabled: true
        })
      } else {
        items.push({
          label: self.preText,
          value: value - 1
        })
      }
    }
    if (self.showNum) {
      items.push({
        label: '1',
        value: 1,
        selected: value === 1
      })
      lastValue = 1
      if (beforeIndex > 2 && self.ellipsisText) {
        items.push({
          type: 'ellipsis'
        })
      }
      for (let i = beforeIndex; i <= afterIndex; i++) {
        items.push({
          label: i,
          value: i,
          selected: i === value
        })

        lastValue = i
      }
      if (lastValue < self.total - 1 && self.ellipsisText) {
        items.push({
          type: 'ellipsis'
        })
      }
      if (lastValue < self.total) {
        items.push({
          label: self.total,
          value: self.total,
          selected: self.total === value
        })
      }
    }
    if (self.nextText) {
      if (value === self.total) {
        items.push({
          label: self.nextText,
          disabled: true
        })
      } else {
        items.push({
          label: self.nextText,
          value: value + 1
        })
      }
    }
    sg.View.require('_PageItems').render($dom, {
      items: items,
      ellipsisText: self.ellipsisText
    })
    self.current = value
  },
  getValue: function () {
    return this.current
  },
  onRender: function () {
    let self = this
    let $dom = self.$dom
    self.setValue(self.current)
    $dom.on('click', '.sg_page_item', function () {
      let $selectPage = $(this)
      if ($selectPage.hasClass('disabled')) {
        return
      }
      let selectPage = $selectPage.data('value')
      if (selectPage === self.current) {
        return
      }
      if (self.onChange) {
        if (self.onChange(selectPage) !== false) {
          self.setValue(selectPage)
        }
      } else {
        self.setValue(selectPage)
      }
    })
  }

})

sg.View.define('_PageItems', {
  template: `
  {{each items item}}
  {{if item.type === 'ellipsis'}}
  <div class="sg_page_ellipsis">{{@ellipsisText}}</div>
  {{else}}
  <div class="sg_page_item{{if item.disabled}} disabled{{/if}}{{if item.selected}} selected{{/if}}" data-value="{{item.value}}">{{@item.label}}</div>
  {{/if}}
  {{/each}}
`
})
