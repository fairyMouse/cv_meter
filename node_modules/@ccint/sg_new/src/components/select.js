import $ from 'jquery'
import sg from '../sg.js'
import './select.css'

sg.Component.define('Select', {
  properties: {
    contents: [],
    default_index: null,
    default_value: null,
    nonetext: 'please select',
    width: 80,
    row_height: 15,
    select_height: 200,
    onchange: 'onchange',
    onclose: 'onclose',
    onopen: 'onopen'
  },
  template: '<div class="sg_mselect_button" style="width: {{width}}px"><span class="sg_mselect_text">{{@nonetext}}</span><span class="sg_mselect_triangle_down"></span></div><div class="sg_mselect_select" style="width: {{width-1}}px; max-height: {{select_height}}px">{{each contents i index}}<div class="sg_mselect_option" style="height: {{row_height}}px; line-height: {{row_height}}px" key="{{i[0]}}" index="{{index++}}">{{@i[1]}}</div>{{/each}}</div>',
  onBeforeRender: function (next) {
    return next(this)
  },
  onRender: function () {
    let self = this
    let $dom = self.$parent
    self.$btn = $dom.find('.sg_mselect_button')
    self.$slt = $dom.find('.sg_mselect_select')
    self.$title = self.$btn.find('.sg_mselect_text')
    self.$triangle = self.$btn.find('.sg_mselect_triangle_down')

    // init
    $dom.css({'position': 'relative'})
    if (self.default_value !== null) {
      for (let i = 0, length = self.contents.length; i < length; i++) {
        if (self.contents[i][0] === self.default_value) {
          self.default_index = i
          break
        }
      }
    }
    if (self.default_index !== null) {
      self.setSelection(self.default_index)
    }

    // bind click
    $(document).unbind('click', self.event.click).bind('click', self.event.click)

    // bind select mousemove
    self.$slt.bind('mousemove', function (e) {
      let $target = $(e.target)
      if (!$target.hasClass('sg_mselect_option')) {
        $target = $target.parents('.sg_mselect_option')
      }
      $target.addClass('sg_mselect_option_hover').siblings().removeClass('sg_mselect_option_hover')
    })
  },

  /**
   * get current selected
   * @return Array
   */
  getSelection: function () {
    if (this.selected === null) {
      return null
    }
    return this.contents[this.selected]
  },

  /**
   * set selected index
   */
  setSelection: function (index) {
    let self = this
    if (self.selected === index || index === null) {
      return
    }
    self.selected = index
    self.$title.html(self.contents[self.selected][1])
    self.$slt.children().removeClass('sg_mselect_option_selected').eq(self.selected).addClass('sg_mselect_option_selected')
  },

  /**
   * open selection
   * @return void
   */
  open: function () {
    if (this.is_open) {
      return
    }

    this.$parent.addClass('sg_mselect_selected')
    this.$btn.find('.sg_mselect_triangle_down').attr('class', 'sg_mselect_triangle_up')

    // 滚动条到大致被选的位置
    if (this.selected !== null) {
      this.$slt.scrollTop(this.row_height * this.selected)
    }

    sg.fire(this.$parent.attr('id') + '.' + this.onopen)
    this.is_open = true
  },

  /**
   * close selection
   * @return void
   */
  close: function () {
    if (!this.is_open) {
      return
    }

    this.$parent.removeClass('sg_mselect_selected')
    this.$btn.find('.sg_mselect_triangle_up').attr('class', 'sg_mselect_triangle_down')

    sg.fire(this.$parent.attr('id') + '.' + this.onclose)
    this.is_open = false
  },

  event: {
    click: function (e) {
      let $target = $(e.target)
      let $sg_mselect_option = $target.closest('.sg_mselect_option')
      let $sg_mselect_button = $target.closest('.sg_mselect_button')

      if (!$sg_mselect_option.length && !$sg_mselect_button.length) {
        let instances = sg.Component.getInstances().Select
        for (let i in instances) {
          if (instances.hasOwnProperty(i)) {
            instances[i].close()
          }
        }
        return
      }

      let $root
      let cur_instance
      if ($sg_mselect_option.length) {
        // 获取容器元素
        $root = $sg_mselect_option.parent().parent()
        cur_instance = sg.Component.Select($root)

        cur_instance.setSelection(parseInt($target.attr('index')))
        sg.fire(cur_instance.$parent.attr('id') + '.' + cur_instance.onchange)
        cur_instance.close()
      } else {
        $root = $sg_mselect_button.parent()
        cur_instance = sg.Component.Select($root)
        cur_instance.open()
      }
    }
  }
})
